
open Printf

open Admd_functor_declaration
open Mawilab_admd_functor_declaration
open Mawilab_mod_admd_functor_declaration

open Maps

open Traffic_flow_aggr_data_functor_declarations

let debug_enabled = ref true

let set_debug bool = debug_enabled := bool

let debug fmt =
  Printf.kprintf
    (
      if !debug_enabled then
	(fun s -> Format.printf "[Xml_attribute_builder]: %s@." s)
      else
	ignore
    )
    fmt

let process
    parallelization_mode
    
    date_format_string

    detector_container_file_name
    detector_setting_container_file_name

    xml_file_path
    =
  (
    debug "process: call";
    
    debug "process: xml_file_path: %s" xml_file_path;

    let reference_detector_container =
      Detector_container.of_file
        detector_container_file_name
    in
    
    let reference_detector_setting_container =
      Detector_setting_container.of_file
        detector_setting_container_file_name
    in

    debug "process: building admd_file";
    
    let mawilab_admd_file =
      Mawilab_admd.File.of_filename
        false
	
        date_format_string
        
        parallelization_mode
        
        reference_detector_container
        reference_detector_setting_container

        xml_file_path
    in

    let analysis =
      match mawilab_admd_file.Mawilab_admd.File.analysis_option with
      | None ->
        (
          print_endline "Trace_xml_attribute_builder: cannot build network traffic attribute for empty analysis";
          assert(false)
        )
      | Some analysis -> analysis
    in

    let description = analysis.Analysis.description in

    let description_string_list = Str.split (Str.regexp "--") description in
    
    if Batteries.List.length description_string_list <> 2 then
      (
        print_endline
	  (sprintf
	     "Xml_attribute_builder: description does not contain 2 elements:\n%s" 
	     description
	  );
        assert(false)
      );

    let attribute_name_container_string_from_file = List.nth description_string_list 1 in

    let attributes_name_container_from_file =
      Attribute_name_container.t_of_sexp
        (Sexplib.Sexp.of_string
           attribute_name_container_string_from_file
        )
    in

    let attribute_name_container = Network_attributes.generate_attribute_name_container () in

    if Attribute_name_container.compare attribute_name_container attributes_name_container_from_file <> 0 then
      (
        (* TODO: use to_string on both *)
        print_endline
          "Trace_xml_attribute_builder: process: network attributes in xml file inconsistent with current version !!!!"
        ;
        assert(false)
      )
    else
      (
        let anomaly_list = Mawilab_admd.Anomaly_container.to_list mawilab_admd_file.Mawilab_admd.File.anomaly_container in
        
        let anomaly_int_map =
          Batteries.List.fold_left
            (fun int_map anomaly ->
              (
                Int_map.add
                  anomaly.Mawilab_admd.Anomaly.indice
                  anomaly
                  int_map
              )
            )
            Int_map.empty
            anomaly_list
        in

	let xml_file_basename = Filename.basename xml_file_path in
	let xml_file_basename_no_extension = Filename.chop_extension xml_file_basename in

        let xm_filename_split_list = Str.split (Str.regexp "_") xml_file_basename_no_extension in
        let xm_filename_split_list_without_cl = List.rev (List.tl (List.rev xm_filename_split_list)) in
	let xml_file_basename_no_extension_without_cl =
	  Utils_batteries.to_string_list
	    ~sep: "_"
	    (fun string -> string)
	    xm_filename_split_list_without_cl
	in

	let mawilab_admd_mod_description_int_map =
	  Int_map.mapi
	    (fun indice anomaly ->
	      let description =
                match anomaly.Mawilab_admd.Anomaly.anomaly_description_option with
                | None -> 
                  print_endline
		    "Xml_attribute_builder: process: empty anomaly description cannot extract network_attributes !!!!"
                  ;
                  assert(false)
                | Some string -> string
	      in

	      let description = Mawilab_mod_anomaly_description.of_string description in
	      description
	    )
	    anomaly_int_map
	in

	(xml_file_basename_no_extension_without_cl,
	 mawilab_admd_file,
	 mawilab_admd_mod_description_int_map
	)
      )
  )
